generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  cart_item_id Int       @id
  cart_id      Int?
  product_id   Int?
  quantity     Int?
  price        Decimal?  @db.Decimal(10, 2)
  carts        carts?    @relation(fields: [cart_id], references: [cart_id], onDelete: NoAction, onUpdate: NoAction)
  products     products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction)
}

model carts {
  cart_id    Int          @id
  user_id    Int?
  cart_items cart_items[]
  users      users?       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  category_id   Int        @id
  category_name String
  products      products[]
}

model favorites {
  favorite_id Int       @id
  user_id     Int?
  product_id  Int?
  products    products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction)
  users       users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  product_id   Int          @id
  product_name String
  price        Decimal      @db.Decimal(10, 2)
  description  String?
  category_id  Int?
  cart_items   cart_items[]
  favorites    favorites[]
  categories   categories?  @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id   Int         @id
  username  String
  email     String
  password  String
  carts     carts[]
  favorites favorites[]
}
